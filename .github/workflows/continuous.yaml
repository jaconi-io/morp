name: Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!mkdocs/**'
  pull_request:
    branches:
      - main
    paths:
      - '**'
      - '!mkdocs/**'

jobs:
  lint-commits:
    if: github.actor != 'dependabot[bot]'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Lint commit message(s)
        run: |
          yarn add @commitlint/cli
          yarn add @commitlint/config-conventional
          yarn run commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-9-jdk21@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: snyk.sarif

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v5

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Test with Gradle
        env:
          MORP_OAUTH2CLIENT_REGISTRATION_GOOGLE_CLIENTID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MORP_OAUTH2CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MORP_OAUTH2CLIENT_REGISTRATION_OKTA_CLIENTID: ${{ secrets.OKTA_CLIENT_ID }}
          MORP_OAUTH2CLIENT_REGISTRATION_OKTA_CLIENTSECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
          TEST_OKTA_PASSWORD: ${{ secrets.OKTA_USER_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean check sonarqube

      - name: JUnit Report
        if: always() # always run even if the previous step fails
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: 'build/test-results/*/*.xml'

      - uses: codecov/codecov-action@v5
        if: always() # always run even if the previous step fails
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml
