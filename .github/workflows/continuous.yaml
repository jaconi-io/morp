name: Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!mkdocs/**'
  pull_request:
    branches:
      - main
    paths:
      - '**'
      - '!mkdocs/**'

jobs:
  lint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - name: Lint commit message(s)
        run: |
          yarn add @commitlint/cli
          yarn add @commitlint/config-conventional
          yarn run commitlint --from HEAD~${{ github.event.pull_request.commits }}

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: snyk/actions/gradle-9-jdk21@9adf32b1121593767fc3c057af55b55db032dc04
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: snyk.sarif

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '21'
      - uses: gradle/actions/wrapper-validation@a009669cd5ded58aeceb80a10a7b8697138f01d0
      - name: Test with Gradle
        env:
          MORP_OAUTH2CLIENT_REGISTRATION_GOOGLE_CLIENTID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MORP_OAUTH2CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MORP_OAUTH2CLIENT_REGISTRATION_OKTA_CLIENTID: ${{ secrets.OKTA_CLIENT_ID }}
          MORP_OAUTH2CLIENT_REGISTRATION_OKTA_CLIENTSECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
          TEST_OKTA_PASSWORD: ${{ secrets.OKTA_USER_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew check sonar
      - uses: mikepenz/action-junit-report@71ca73c48774342bd54ce644f65c6b721f105ae8
        if: always()
        with:
          report_paths: build/test-results/*/*.xml
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml

  release:
    if: github.event_name == 'push'
    needs: test
    outputs:
      next-release-version: ${{ steps.semantic-release.outputs.next-release-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.JACONI_BOT_GITHUB_TOKEN }}
      - uses: actions/setup-node@v6
        with:
          node-version: lts/*
      - id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.JACONI_BOT_GITHUB_TOKEN }}
          GITHUB_USER: ${{ secrets.JACONI_BOT_USERNAME }}
        run: |
          yarn add semantic-release
          yarn add @semantic-release/changelog
          yarn add @semantic-release/exec
          yarn add @semantic-release/git
          yarn run semantic-release

  publish-amd:
    if: needs.release.outputs.next-release-version != ''
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 25
      - uses: gradle/actions/wrapper-validation@a009669cd5ded58aeceb80a10a7b8697138f01d0
      - uses: docker/login-action@28fdb31ff34708d19615a74d67103ddc2ea9725c
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: ./gradlew bootBuildImage --publishImage --imageName=ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }}-amd64

  publish-arm:
    if: needs.release.outputs.next-release-version != ''
    needs: release
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 25
      - uses: gradle/actions/wrapper-validation@a009669cd5ded58aeceb80a10a7b8697138f01d0
      - uses: docker/login-action@28fdb31ff34708d19615a74d67103ddc2ea9725c
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: ./gradlew bootBuildImage --publishImage --imageName=ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }}-arm64

  publish:
    if: needs.release.outputs.next-release-version != ''
    needs:
      - release
      - publish-amd
      - publish-arm
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@28fdb31ff34708d19615a74d67103ddc2ea9725c
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          docker manifest create ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }} \
               --amend ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }}-amd64 \
               --amend ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }}-arm64
          docker manifest push ghcr.io/${{ github.repository }}:${{ needs.release.outputs.next-release-version }}
