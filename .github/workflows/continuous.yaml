name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Test with Gradle
        uses: gradle/gradle-build-action@v1
        env:
          MORP_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MORP_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MORP_OAUTH2_CLIENT_REGISTRATION_OKTA_CLIENTID: ${{ secrets.OKTA_CLIENT_ID }}
          MORP_OAUTH2_CLIENT_REGISTRATION_OKTA_CLIENTSECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
        with:
          arguments: clean check --continue

      - name: Test Summary
        if: always()
        uses: test-summary/action@v1
        with:
          paths: 'build/test-results/**/*.xml'
          output: "build/test-results/summary.md"

      - id: get-comment-body
        if: always()
        run: |
          body="$(cat build/test-results/summary.md)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo "::set-output name=body::$body"

      - name: Create comment
        if: always()
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Publish Test Report
        if: always() # always run even if the previous step fails
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'build/test-results/**/*.xml'

      - uses: codecov/codecov-action@v3
        if: always() # always run even if the previous step fails
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml

      - uses: phoenix-actions/test-reporting@v8
        if: always() # always run even if the previous step fails
        with:
          name: JUnit Tests
          path: 'build/test-results/**/*.xml'
          reporter: 'java-junit'

          # Allows you to generate only the summary.
          # If enabled, the report will contain a table listing each test results file and the number of passed, failed, and skipped tests.
          # Detailed listing of test suites and test cases will be skipped.
          only-summary: 'false'

          # Limits which test suites are listed:
          #   all
          #   failed
          list-suites: 'all'

          # Limits which test cases are listed:
          #   all
          #   failed
          #   none
          list-tests: 'all'

          # Limits number of created annotations with error message and stack trace captured during test execution.
          # Must be less or equal to 50.
          max-annotations: '50'

          # Set action as failed if test report contains any failed test
          fail-on-error: 'true'

  release:
    if: github.event_name == 'push'
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_USER: ${{ github.actor }}
        run: |
          yarn add semantic-release
          yarn add @semantic-release/exec
          yarn add @semantic-release/git
          yarn run semantic-release 
