name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Test with Gradle
        uses: gradle/gradle-build-action@v1
        env:
          MORP_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MORP_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MORP_OAUTH2_CLIENT_REGISTRATION_OKTA_CLIENTID: ${{ secrets.OKTA_CLIENT_ID }}
          MORP_OAUTH2_CLIENT_REGISTRATION_OKTA_CLIENTSECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
        with:
          arguments: clean check --continue

      - name: Test Summary
        if: always()
        uses: test-summary/action@v1
        with:
          paths: 'build/test-results/**/*.xml'
          output: "build/test-results/summary.md"

      - id: get-comment-body
        if: always()
        run: |
          body="$(cat build/test-results/summary.md)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo "::set-output name=body::$body"

      - name: Create comment
        if: always()
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: 1
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Publish Test Report
        if: always() # always run even if the previous step fails
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'build/test-results/**/*.xml'

      - uses: codecov/codecov-action@v3
        if: always() # always run even if the previous step fails
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml

  release:
    if: github.event_name == 'push'
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_USER: ${{ github.actor }}
        run: |
          yarn add semantic-release
          yarn add @semantic-release/exec
          yarn add @semantic-release/git
          yarn run semantic-release 
